
// Mixins

.return-contrasting-color(@color) when (luma(@color) > 50%) {
	@contrasting-color: black;
}
.return-contrasting-color(@color) when (luma(@color) =< 50%) {
	@contrasting-color: white;
}

.contrasting-color(@color) {

	.return-contrasting-color(@color);

	color: @contrasting-color;
}


@body-background-color: #8cf;

body {

	background: @body-background-color; // url('noise-3percent.png');

	// background: #8cf;
	// background-image: linear-gradient(to bottom, #48e 0%, #8cf 100%);
}



.tree-view {

	margin: 50px;

	ul {

		margin: 0;
		padding: 0;
		list-style: none;

		li {

			min-height: 30px;

			margin: 0;
			padding: 0;

			display: flex;
			align-items: stretch;

			&.insert.after {

				margin-bottom: 10px;
			}

			>div.task {

				@task-width: 200px;
				@task-margin: 16px;

				display: inline-block;

				width: @task-width;

				// box-sizing: border-box;
				// padding: 10px;
				
				margin: 0 @task-margin @task-margin 0;
				border-radius: 5px;

				@title-margin-h: 13.400px; // Some default value for h1. It looked ok.
				@title-margin-v: 10px;

				h1, input {

					font-size: 20px;
					font-weight: normal;

					font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;
				}

				h1 {

					margin: @title-margin-h @title-margin-v;
				}

				input {

					display: none;

					width: calc(~"100% -" @title-margin-v);
					border: none;

					padding: @title-margin-h/2 - 1px @title-margin-v/2 - 1px;
					margin: @title-margin-h/2 @title-margin-v/2;

					background: transparent;
					color: inherit;

					border-radius: 3px;
					border: 1px solid;

					// Disable the default focus-style.
					&:focus {

						outline: none;
					}
				}

				&.editing-title h1 {

					display: none;
				}
				&.editing-title input {

					display: block;
				}

				// Buttons
				i.button {

					position: absolute;
					bottom: 7px;

					font-size: 22px;

					opacity: 0;
					transition: opacity 0.1s;
				}
				&:hover i.button {

					opacity: 1;
					transition: opacity 0.2s;
				}
				&.editing-title i.button {

					display: none;
				}
				i.add-sub-task {

					right: 10px;
				}
				i.task-details {

					right: 35px;
				}


				// Colors
				@task-color-white: #fff;
				@task-color-black: #333;
				@task-color-blue: #38f;
				@task-color-purple: #a29;
				@task-color-red: #f45;
				@task-color-orange: #f82;
				@task-color-yellow: #ff5;
				@task-color-green: #6f2;
				.task-color (@color) {

					background: @color; // url(noise-5percent.png);
					// background-image: linear-gradient(to bottom, @color 0%, darken(@color, 2%) 100%);
					box-shadow: 0px 2px 0px 0px darken(desaturate(@color, 30%), 10%);
					.contrasting-color(@color);

					// Make the buttons visually stay on top of the title.
					i.button {

						background: @color;
						box-shadow: 0px 0px 5px 5px @color;
					}
				}
				.task-color(@task-color-white);
				&[data-color='black'] {
					.task-color(@task-color-black);
				}
				&[data-color='blue'] {
					.task-color(@task-color-blue);
				}
				&[data-color='purple'] {
					.task-color(@task-color-purple);
				}
				&[data-color='red'] {
					.task-color(@task-color-red);
				}
				&[data-color='orange'] {
					.task-color(@task-color-orange);
				}
				&[data-color='yellow'] {
					.task-color(@task-color-yellow);
				}
				&[data-color='green'] {
					.task-color(@task-color-green);
				}


				// Drop targets
				position: relative;
				>.drop-target {

					position: absolute;

					width: @task-width;

					&.before {

						top: -@task-margin/2;
						bottom: 50%;
					}
					&.after {

						top: 50%;
						bottom: -@task-margin/2;
					}
					&.child {

						// Set it up to cover the entire area where a child
						// would go, but show it only for leaf nodes.

						display: none;

						width: (@task-margin + @task-width);
						right: -(@task-margin + @task-width);

						top: -@task-margin/2;
						bottom: -@task-margin/2;

						// Make hovering not show the task buttons.
						pointer-events: none;
					}
				}
			}

			&.leaf > .task > .drop-target.child {

				display: block;
			}
		}
	}

	// Make the drop targets only show up while dragging.
	// (Leaf nodes child-targets are still visible, but they don't overlap the task.)
	.drop-target {

		display: none;
	}
	&.dragging .drop-target {

		display: block;
	}
}
